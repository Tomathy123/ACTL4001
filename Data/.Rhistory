# install.packages('readxl')
# install.packages('openxlsx')
library(tidyverse)
library(dplyr)
library(readxl)
library(tidyr)
library(openxlsx)
# Read in the Data (files in the drive) -----------------------------------
inforce_data <- read.csv("inforce_data.csv", header = TRUE)
intervention_data <- read.csv("intervention_data.csv", header = TRUE)
eco_data <- read.csv("economy_data.csv", header = TRUE)
mortality_data <- read.csv("mortality_data.csv", header = TRUE)
mortality_modified <- read.csv("base_mortmod.csv", header = TRUE)
# Split the Inforce Data --------------------------------------------------
splitbypolicytype <- split(inforce_data, inforce_data$Policy.type)
t_20 <- splitbypolicytype[["T20"]]
spwl <- splitbypolicytype[["SPWL"]]
# Base Mortality Table Calculation ----------------------------------------
#Removing the additional column
#mortality_data <- mortality_data[,-c(1)]
#finding the probability of survival at each age
#mortality_data$p_x <- 1- mortality_data$Mortality.Rate
#Renaming the Header
colnames(mortality_modified) <- c("Age","MS", "FS", "MNS", "FNS")
#Calculating the survival p_x
mortality_modified$MS.p_x <- 1 - mortality_modified$MS
mortality_modified$FS.p_x <- 1 - mortality_modified$FS
mortality_modified$MNS.p_x <- 1 - mortality_modified$MNS
mortality_modified$FNS.p_x <- 1 - mortality_modified$FNS
# Average Spot Rate -------------------------------------------------------
average_spot_rate <- mean(eco_data[,4])
#This is used, if current year is past 2023
# 20 Year Term Life Function -----------------------------------------------------
insurance_20_year <- function (x, issue_year, face_value, gender, s_status) {
if(gender == "M" & s_status == "S") {
MS.kpx <- rep(0,20)
MS.kpx[1] <- mortality_modified$MS[x]
for (i in 2:20) {
MS.kpx[i] <- prod(MS.kpx[i-1],mortality_modified$MS[x+i-1])
}
} else if (gender == "F" & s_status == "S") {
FS.kpx <- rep(0,20)
FS.kpx[1] <- mortality_modified$FS[x]
for (i in 2:20) {
FS.kpx[i] <- prod(FS.kpx[i-1],mortality_modified$FS[x+i-1])
}
} else if (gender == "M" & s_status == "NS") {
MNS.kpx <- rep(0,20)
MNS.kpx[1] <- mortality_modified$MNS[x]
for (i in 2:20) {
MNS.kpx[i] <- prod(MNS.kpx[i-1],mortality_modified$MNS[x+i-1])
}
} else if (gender == "F" & s_status == "NS") {
FNS.kpx <- rep(0,20)
FNS.kpx[1] <- mortality_modified$FNS[x]
for (i in 2:20) {
FNS.kpx[i] <- prod(FNS.kpx[i-1],mortality_modified$FNS[x+i-1])
}
}
#Find kpx values, will use formula k|q_x=kpx*q_(x+k)
spot_rate_x <- rep(0,20)
#This checks if current year is less than 2023, if so, use spot rate, otherwise use average
for (i in 1:20) {
current_year <- issue_year + i - 1
if (length(eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]) == 0) {
spot_rate_x[i] <- average_spot_rate
} else {
spot_rate_x[i] <- eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]
}
}
#This should generate a vector of (1+i,(1+i)^2,...,(1+i)^20)
effective_interest <- c(1+spot_rate_x[1])
for (i in 2:20) {
effective_interest[i] <- prod(effective_interest[i-1], (1 + spot_rate_x[i]))
}
#Finding the components of the sum for the final value
# Using sum of v^(k+1)*kpx*q_(x+k)
if(gender == "M" & s_status == "S") {
value <- rep(0,20)
value[1] <- prod(mortality_modified$MS[x], (1/(effective_interest[1])))
for (i in 1:19) {
value[i+1] <- prod(MS.kpx[i],mortality_modified$MS[x+i], 1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "S") {
value <- rep(0,20)
value[1] <- prod(mortality_modified$FS[x], (1/(effective_interest[1])))
for (i in 1:19) {
value[i+1] <- prod(FS.kpx[i],mortality_modified$FS[x+i], 1/(effective_interest[i+1]))
}
} else if (gender == "M" & s_status == "NS") {
value <- rep(0,20)
value[1] <- prod(mortality_modified$MNS[x], (1/(effective_interest[1])))
for (i in 1:19) {
value[i+1] <- prod(MNS.kpx[i],mortality_modified$MNS[x+i], 1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "NS") {
value <- rep(0,20)
value[1] <- prod(mortality_modified$FNS[x], (1/(effective_interest[1])))
for (i in 1:19) {
value[i+1] <- prod(FNS.kpx[i],mortality_modified$FNS[x+i], 1/(effective_interest[i+1]))
}
}
final <- face_value*sum(value)
return(final)
}
insurance_20_year(40, 2000, 50000, 'F', 'NS')
#Annuity
annuity_due_term <- function (x, issue_year, gender, s_status) {
if(gender == "M" & s_status == "S") {
MS.kpx <- rep(0,20)
MS.kpx[1] <- mortality_modified$MS[x]
for (i in 2:20) {
MS.kpx[i] <- prod(MS.kpx[i-1],mortality_modified$MS[x+i-1])
}
} else if (gender == "F" & s_status == "S") {
FS.kpx <- rep(0,20)
FS.kpx[1] <- mortality_modified$FS[x]
for (i in 2:20) {
FS.kpx[i] <- prod(FS.kpx[i-1],mortality_modified$FS[x+i-1])
}
} else if (gender == "M" & s_status == "NS") {
MNS.kpx <- rep(0,20)
MNS.kpx[1] <- mortality_modified$MNS[x]
for (i in 2:20) {
MNS.kpx[i] <- prod(MNS.kpx[i-1],mortality_modified$MNS[x+i-1])
}
} else if (gender == "F" & s_status == "NS") {
FNS.kpx <- rep(0,20)
FNS.kpx[1] <- mortality_modified$FNS[x]
for (i in 2:20) {
FNS.kpx[i] <- prod(FNS.kpx[i-1],mortality_modified$FNS[x+i-1])
}
}
spot_rate_x <- rep(0,19)
#This checks if current year is less than 2023, if so, use spot rate, otherwise use average
for (i in 1:19) {
current_year <- issue_year + i - 1
if (length(eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]) == 0) {
spot_rate_x[i] <- average_spot_rate
} else {
spot_rate_x[i] <- eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]
}
}
#This should generate a vector of (1+i,(1+i)^2,...,(1+i)^20)
effective_interest <- c(1+spot_rate_x[1])
for (i in 2:19) {
effective_interest[i] <- prod(effective_interest[i-1], (1 + spot_rate_x[i]))
}
if(gender == "M" & s_status == "S") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(MS.kpx[i], 1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "S") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(FS.kpx[i], 1/(effective_interest[i+1]))
}
} else if (gender == "M" & s_status == "NS") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(MNS.kpx[i],1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "NS") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(FNS.kpx[i],1/(effective_interest[i+1]))
}
}
final <- sum(value)
return(final)
}
annuity_due_term(54,2001, 'M', 'S')
annuity_due_term(50,2001, 'M', 'S')
annuity_due_term(50,2001, 'M', 'NS')
insurance_20_year(54,2001,100000, 'M', 'S')
annuity_due_term(50,2001, 'M', 'S')
View(mortality_modified)
View(mortality_modified)
annuity_due_term <- function (x, issue_year, gender, s_status) {
if(gender == "M" & s_status == "S") {
MS.kpx <- rep(0,20)
MS.kpx[1] <- mortality_modified$MS.p_x[x]
for (i in 2:20) {
MS.kpx[i] <- prod(MS.kpx[i-1],mortality_modified$MS.p_x[x+i-1])
}
} else if (gender == "F" & s_status == "S") {
FS.kpx <- rep(0,20)
FS.kpx[1] <- mortality_modified$FS.p_x[x]
for (i in 2:20) {
FS.kpx[i] <- prod(FS.kpx[i-1],mortality_modified$FS.p_x[x+i-1])
}
} else if (gender == "M" & s_status == "NS") {
MNS.kpx <- rep(0,20)
MNS.kpx[1] <- mortality_modified$MNS.p_x[x]
for (i in 2:20) {
MNS.kpx[i] <- prod(MNS.kpx[i-1],mortality_modified$MNS.p_x[x+i-1])
}
} else if (gender == "F" & s_status == "NS") {
FNS.kpx <- rep(0,20)
FNS.kpx[1] <- mortality_modified$FNS.p_x[x]
for (i in 2:20) {
FNS.kpx[i] <- prod(FNS.kpx[i-1],mortality_modified$FNS.p_x[x+i-1])
}
}
spot_rate_x <- rep(0,19)
#This checks if current year is less than 2023, if so, use spot rate, otherwise use average
for (i in 1:19) {
current_year <- issue_year + i - 1
if (length(eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]) == 0) {
spot_rate_x[i] <- average_spot_rate
} else {
spot_rate_x[i] <- eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]
}
}
#This should generate a vector of (1+i,(1+i)^2,...,(1+i)^20)
effective_interest <- c(1+spot_rate_x[1])
for (i in 2:19) {
effective_interest[i] <- prod(effective_interest[i-1], (1 + spot_rate_x[i]))
}
if(gender == "M" & s_status == "S") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(MS.kpx[i], 1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "S") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(FS.kpx[i], 1/(effective_interest[i+1]))
}
} else if (gender == "M" & s_status == "NS") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(MNS.kpx[i],1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "NS") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(FNS.kpx[i],1/(effective_interest[i+1]))
}
}
final <- sum(value)
return(final)
}
annuity_due_term(54,2001, 'M', 'S')
View(mortality_modified)
insurance_20_year(54,2001,100000, 'M', 'S')
annuity_due_term(54,2001, 'M', 'S')
View(mortality_modified)
annuity_due_term <- function (x, issue_year, gender, s_status) {
if(gender == "M" & s_status == "S") {
MS.kpx <- rep(0,20)
MS.kpx[1] <- mortality_modified$MS.p_x[x]
for (i in 2:20) {
MS.kpx[i] <- prod(MS.kpx[i-1],mortality_modified$MS.p_x[x+i-1])
}
} else if (gender == "F" & s_status == "S") {
FS.kpx <- rep(0,20)
FS.kpx[1] <- mortality_modified$FS.p_x[x]
for (i in 2:20) {
FS.kpx[i] <- prod(FS.kpx[i-1],mortality_modified$FS.p_x[x+i-1])
}
} else if (gender == "M" & s_status == "NS") {
MNS.kpx <- rep(0,20)
MNS.kpx[1] <- mortality_modified$MNS.p_x[x]
for (i in 2:20) {
MNS.kpx[i] <- prod(MNS.kpx[i-1],mortality_modified$MNS.p_x[x+i-1])
}
} else if (gender == "F" & s_status == "NS") {
FNS.kpx <- rep(0,20)
FNS.kpx[1] <- mortality_modified$FNS.p_x[x]
for (i in 2:20) {
FNS.kpx[i] <- prod(FNS.kpx[i-1],mortality_modified$FNS.p_x[x+i-1])
}
}
spot_rate_x <- rep(0,19)
#This checks if current year is less than 2023, if so, use spot rate, otherwise use average
for (i in 1:19) {
current_year <- issue_year + i - 1
if (length(eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]) == 0) {
spot_rate_x[i] <- average_spot_rate
} else {
spot_rate_x[i] <- eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]
}
}
#This should generate a vector of (1+i,(1+i)^2,...,(1+i)^20)
effective_interest <- c(1+spot_rate_x[1])
for (i in 2:19) {
effective_interest[i] <- prod(effective_interest[i-1], (1 + spot_rate_x[i]))
}
if(gender == "M" & s_status == "S") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(MS.kpx[i], 1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "S") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(FS.kpx[i], 1/(effective_interest[i+1]))
}
} else if (gender == "M" & s_status == "NS") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(MNS.kpx[i],1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "NS") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(FNS.kpx[i],1/(effective_interest[i+1]))
}
}
final <- sum(value)
return(final)
}
annuity_due_term(54,2001)
annuity_due_term(54,2001, 'F')
annuity_due_term(54,2001, 'F', 'S')
annuity_due_term(54,2001, 'F', 'NS')
# 20 Year Term Life Function -----------------------------------------------------
insurance_20_year <- function (x, issue_year, face_value, gender, s_status) {
if(gender == "M" & s_status == "S") {
MS.kpx <- rep(0,20)
MS.kpx[1] <- mortality_modified$MS.p_x[x]
for (i in 2:20) {
MS.kpx[i] <- prod(MS.kpx[i-1],mortality_modified$MS.p_x[x+i-1])
}
} else if (gender == "F" & s_status == "S") {
FS.kpx <- rep(0,20)
FS.kpx[1] <- mortality_modified$FS.p_x[x]
for (i in 2:20) {
FS.kpx[i] <- prod(FS.kpx[i-1],mortality_modified$FS.p_x[x+i-1])
}
} else if (gender == "M" & s_status == "NS") {
MNS.kpx <- rep(0,20)
MNS.kpx[1] <- mortality_modified$MNS.p_x[x]
for (i in 2:20) {
MNS.kpx[i] <- prod(MNS.kpx[i-1],mortality_modified$MNS.p_x[x+i-1])
}
} else if (gender == "F" & s_status == "NS") {
FNS.kpx <- rep(0,20)
FNS.kpx[1] <- mortality_modified$FNS.p_x[x]
for (i in 2:20) {
FNS.kpx[i] <- prod(FNS.kpx[i-1],mortality_modified$FNS.p_x[x+i-1])
}
}
#Find kpx values, will use formula k|q_x=kpx*q_(x+k)
spot_rate_x <- rep(0,20)
#This checks if current year is less than 2023, if so, use spot rate, otherwise use average
for (i in 1:20) {
current_year <- issue_year + i - 1
if (length(eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]) == 0) {
spot_rate_x[i] <- average_spot_rate
} else {
spot_rate_x[i] <- eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]
}
}
#This should generate a vector of (1+i,(1+i)^2,...,(1+i)^20)
effective_interest <- c(1+spot_rate_x[1])
for (i in 2:20) {
effective_interest[i] <- prod(effective_interest[i-1], (1 + spot_rate_x[i]))
}
#Finding the components of the sum for the final value
# Using sum of v^(k+1)*kpx*q_(x+k)
if(gender == "M" & s_status == "S") {
value <- rep(0,20)
value[1] <- prod(mortality_modified$MS[x], (1/(effective_interest[1])))
for (i in 1:19) {
value[i+1] <- prod(MS.kpx[i],mortality_modified$MS[x+i], 1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "S") {
value <- rep(0,20)
value[1] <- prod(mortality_modified$FS[x], (1/(effective_interest[1])))
for (i in 1:19) {
value[i+1] <- prod(FS.kpx[i],mortality_modified$FS[x+i], 1/(effective_interest[i+1]))
}
} else if (gender == "M" & s_status == "NS") {
value <- rep(0,20)
value[1] <- prod(mortality_modified$MNS[x], (1/(effective_interest[1])))
for (i in 1:19) {
value[i+1] <- prod(MNS.kpx[i],mortality_modified$MNS[x+i], 1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "NS") {
value <- rep(0,20)
value[1] <- prod(mortality_modified$FNS[x], (1/(effective_interest[1])))
for (i in 1:19) {
value[i+1] <- prod(FNS.kpx[i],mortality_modified$FNS[x+i], 1/(effective_interest[i+1]))
}
}
final <- face_value*sum(value)
return(final)
}
insurance_20_year(40, 2000, 50000, 'F', 'NS')
annuity_due_term <- function (x, issue_year, gender, s_status) {
if(gender == "M" & s_status == "S") {
MS.kpx <- rep(0,20)
MS.kpx[1] <- mortality_modified$MS.p_x[x]
for (i in 2:20) {
MS.kpx[i] <- prod(MS.kpx[i-1],mortality_modified$MS.p_x[x+i-1])
}
} else if (gender == "F" & s_status == "S") {
FS.kpx <- rep(0,20)
FS.kpx[1] <- mortality_modified$FS.p_x[x]
for (i in 2:20) {
FS.kpx[i] <- prod(FS.kpx[i-1],mortality_modified$FS.p_x[x+i-1])
}
} else if (gender == "M" & s_status == "NS") {
MNS.kpx <- rep(0,20)
MNS.kpx[1] <- mortality_modified$MNS.p_x[x]
for (i in 2:20) {
MNS.kpx[i] <- prod(MNS.kpx[i-1],mortality_modified$MNS.p_x[x+i-1])
}
} else if (gender == "F" & s_status == "NS") {
FNS.kpx <- rep(0,20)
FNS.kpx[1] <- mortality_modified$FNS.p_x[x]
for (i in 2:20) {
FNS.kpx[i] <- prod(FNS.kpx[i-1],mortality_modified$FNS.p_x[x+i-1])
}
}
spot_rate_x <- rep(0,19)
#This checks if current year is less than 2023, if so, use spot rate, otherwise use average
for (i in 1:19) {
current_year <- issue_year + i - 1
if (length(eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]) == 0) {
spot_rate_x[i] <- average_spot_rate
} else {
spot_rate_x[i] <- eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]
}
}
#This should generate a vector of (1+i,(1+i)^2,...,(1+i)^20)
effective_interest <- c(1+spot_rate_x[1])
for (i in 2:19) {
effective_interest[i] <- prod(effective_interest[i-1], (1 + spot_rate_x[i]))
}
if(gender == "M" & s_status == "S") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(MS.kpx[i], 1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "S") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(FS.kpx[i], 1/(effective_interest[i+1]))
}
} else if (gender == "M" & s_status == "NS") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(MNS.kpx[i],1/(effective_interest[i+1]))
}
} else if (gender == "F" & s_status == "NS") {
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(FNS.kpx[i],1/(effective_interest[i+1]))
}
}
final <- sum(value)
return(final)
}
insurance_20_year(54,2001,100000, 'M', 'S')
annuity_due_term(54,2001, 'M', 'S')
# Base Mortality Table Calculation ----------------------------------------
#Removing the additional column
mortality_data <- mortality_data[,-c(1)]
#finding the probability of survival at each age
mortality_data$p_x <- 1- mortality_data$Mortality.Rate
annuity_due_term <- function (x, issue_year) {
kpx <- rep(0,20)
kpx[1] <- mortality_data$p_x[x]
for (i in 2:20) {
kpx[i] <- prod(kpx[i-1],mortality_data$p_x[x+i-1])
}
spot_rate_x <- rep(0,19)
#This checks if current year is less than 2023, if so, use spot rate, otherwise use average
for (i in 1:19) {
current_year <- issue_year + i - 1
if (length(eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]) == 0) {
spot_rate_x[i] <- average_spot_rate
} else {
spot_rate_x[i] <- eco_data$X1.yr.Risk.Free.Annual.Spot.Rate[eco_data$Year == current_year]
}
}
#This should generate a vector of (1+i,(1+i)^2,...,(1+i)^20)
effective_interest <- c(1+spot_rate_x[1])
for (i in 2:19) {
effective_interest[i] <- prod(effective_interest[i-1], (1 + spot_rate_x[i]))
}
value <- rep(0,20)
value[1] <- 1
for (i in 1:19) {
value[i+1] <- prod(kpx[i],1/effective_interest[i])
}
final <- sum(value)
return(final)
}
annuity_due_term(54,2001)
insurance_20_year(54,2001,100000, 'M', 'S')/annuity_due_term(54,2001)
insurance_20_year(54,2001,100000, 'M', 'S')
